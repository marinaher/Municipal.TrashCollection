@model IEnumerable<Municipal.TrashCollection.Models.Route>

@{
    ViewBag.Title = "Index";
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyArL5SAmuPeVtef1T__LfEaeTyMqJFpxNw&sensor=false" type="text/javascript"></script>
@*<script src="https://maps.googleapis.com/maps/api/js?Libraries=places,weather&sensor=false"></script>*@
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>

<h2>Employee Route</h2>

<p> Your schedule route for today is:</p>

<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

        //<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
        $(document).ready(function () {
            Initialize();
        });

        // Where all the fun happens
        function Initialize() {

            // Google has tweaked their interface somewhat - this tells the api to use that new UI
            google.maps.visualRefresh = true;
            var Brookfield = new google.maps.LatLng(43.054460, -88.078413);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 13,
                center: { lat: 43.054460, lng: -88.078413 },
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            // a sample list of places for trash collection
            var data = [
                      { "Id": 1, "PlaceName": "House1", "GeoLat": "43.055195", "GeoLong": "-88.080225" },
                      { "Id": 2, "PlaceName": "House2 ", "GeoLat": "43.055107", "GeoLong": "-88.080874" },
                      { "Id": 3, "PlaceName": "House3", "GeoLat": "43.054694", "GeoLong": "-88.080320" },
                      { "Id": 4, "PlaceName": "House4", "GeoLat": "43.054018", "GeoLong": "-88.079919" }
            ];

            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins

            $.each(data, function (i, item) {
                var marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(43.054460, -88.078413),
                    //'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    'map': map,
                    'title': item.PlaceName
                });

                // Make the marker-pin blue!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                // information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                });

                // "OnClick" listener on the map so it pops up our info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
            })
        }
        </script>
    </section>
}